{% extends 'base.html.twig' %}

{% block title %}Calendrier{% endblock %}

{% block content %}
    <h1>Calendrier</h1>
    <div id="calendar"></div>

    <!-- Ajoutez cette section pour les toasts -->
    <div aria-live="polite" aria-atomic="true" class="position-relative">
        <div class="position-absolute top-0 end-0 p-3" style="z-index: 11">
            <div id="successToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <strong class="me-auto">Succès</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Fermer"></button>
                </div>
                <div class="toast-body">
                    Activité ajoutée avec succès.
                </div>
            </div>
            <div id="errorToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <strong class="me-auto">Erreur</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Fermer"></button>
                </div>
                <div class="toast-body">
                    Échec de l'ajout de l'activité.
                </div>
            </div>
        </div>
    </div>

    <!-- Ajoutez la modale Bootstrap ici -->
    <div class="modal fade" id="activityModal" tabindex="-1" aria-labelledby="activityModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="activityModalLabel">Ajouter une activité</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                </div>
                <div class="modal-body">
                    <form id="activityForm">
                        <!-- Remplacez les champs de texte par les champs de votre formulaire ici -->
                        <div class="mb-3">
                            <label for="name" class="form-label">Nom de l'activité :</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="startDate" class="form-label">Date et heure de début :</label>
                            <input type="datetime-local" class="form-control" id="startDate" name="startDate" required>
                        </div>
                        <div class="mb-3">
                            <label for="endDate" class="form-label">Date et heure de fin :</label>
                            <input type="datetime-local" class="form-control" id="endDate" name="endDate" required>
                        </div>
                        <div class="mb-3">
                            <label for="location" class="form-label">Lieu :</label>
                            <input type="text" class="form-control" id="location" name="location" required>
                        </div>
                   
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                    <button type="button" class="btn btn-primary" id="save">Enregistrer</button>
                </div>
            </div>
        </div>
    </div>


   <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.6/index.global.min.js'></script>
    <!-- Ajoutez le lien CDN pour Bootstrap JS ici -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
       document.addEventListener('DOMContentLoaded', function() {
    var activityModal = new bootstrap.Modal(document.getElementById('activityModal'));
    var calendarEl = document.getElementById('calendar');
    var calendarEvents = {{ calendarEvents|json_encode|raw }};
    
    var today = new Date();
    var validRange = {
        start: today.toISOString().substring(0, 10)
    };

    var calendar = new FullCalendar.Calendar(calendarEl, {
        locale: 'fr',
        initialView: 'dayGridMonth',
        events: calendarEvents,
        selectable: true,
        validRange: validRange,
select: function(info) {
    // Ouvre la modale à la place de rediriger
    jQuery('#activityModal').modal('show');

    // Formattez les dates en chaînes ISO pour les attributs 'value' des champs de formulaire
    let startDate = new Date(info.startStr);
    let startISO = startDate.toISOString().substring(0, 19);
    let endDate = new Date(info.endStr);
    let endISO = endDate.toISOString().substring(0, 19);

    // Récupérez l'heure locale
    let localHour = new Date().getHours();
    let localMinute = new Date().getMinutes();

    // Ajoutez l'heure locale aux dates de début et de fin
    startDate.setHours(localHour, localMinute);
    startISO = startDate.toISOString().substring(0, 19);
    endDate.setHours(localHour, localMinute);
    endISO = endDate.toISOString().substring(0, 19);

    // Préremplissez les champs de formulaire avec les dates et heures sélectionnées
    jQuery('#startDate').val(startISO);
    jQuery('#endDate').val(endISO);
}
    });
    calendar.render();

    // Ajoutez cette ligne pour définir saveButton
    var saveButton = document.getElementById('save');

    // Enregistrer les données et fermer la modal
    saveButton.addEventListener('click', function () {
        let activityData = {
            'name': document.getElementById('name').value,
            'startDate': document.getElementById('startDate').value,
            'endDate': document.getElementById('endDate').value,
            'location': document.getElementById('location').value
        };

        // Utilisez fetch pour envoyer les données de l'activité à votre contrôleur Symfony via une requête POST
        fetch('/home/activities/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
                'Accept': 'application/json',
            },
            body: JSON.stringify(activityData)
        }).then(response => {
            if (response.ok) {
                // Recharger la page si l'activité a été enregistrée avec succès
                location.reload();
                
                // Afficher le toast de succès
                var successToast = new bootstrap.Toast(document.getElementById('successToast'));
                successToast.show();
            } else {
                console.error('Erreur lors de la sauvegarde de l\'activité');
                
                // Afficher le toast d'erreur
                var errorToast = new bootstrap.Toast(document.getElementById('errorToast'));
                errorToast.show();
            }
        }).catch(error => {
            console.error('Erreur lors de la requête fetch :', error);
            
            // Afficher le toast d'erreur
            var errorToast = new bootstrap.Toast(document.getElementById('errorToast'));
            errorToast.show();
        });

        activityModal.hide();
    });
});
    </script>
{% endblock %}
